{
  "_from": "cordova-plugin-crop@0.4.0",
  "_id": "cordova-plugin-crop@0.4.0",
  "_inBundle": false,
  "_integrity": "sha1-TZ6Jgsz7OOBPqQnIe0vsBuLR2Ss=",
  "_location": "/cordova-plugin-crop",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "cordova-plugin-crop",
    "fetchSpec": "0.4.0",
    "name": "cordova-plugin-crop",
    "raw": "cordova-plugin-crop@0.4.0",
    "rawSpec": "0.4.0",
    "registry": true,
    "saveSpec": null,
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/cordova-plugin-crop/-/cordova-plugin-crop-0.4.0.tgz",
  "_shasum": "4d9e8982ccfb38e04fa909c87b4bec06e2d1d92b",
  "_shrinkwrap": null,
  "_spec": "cordova-plugin-crop@0.4.0",
  "_where": "/home/linkwok/ionicproject/intranetmobile-1.1.0",
  "bugs": {
    "url": "https://github.com/jeduan/cordova-plugin-crop/issues"
  },
  "bundleDependencies": false,
  "cordova": {
    "id": "cordova-plugin-crop",
    "platforms": [
      "android",
      "ios"
    ]
  },
  "dependencies": {},
  "deprecated": false,
  "description": "Crop an image in a Cordova app",
  "devDependencies": {},
  "homepage": "https://github.com/jeduan/cordova-plugin-crop#readme",
  "keywords": [
    "cordova",
    "cordova-android",
    "cordova-ios",
    "crop",
    "ecosystem:cordova",
    "image",
    "image manipulation"
  ],
  "license": "MIT",
  "name": "cordova-plugin-crop",
  "optionalDependencies": {},
  "readme": "# cordova-plugin-crop\n\n> Crop an image in a Cordova app\n\n\n## Install\n\n```\n$ cordova plugin add --save cordova-plugin-crop\n```\n\n\n## Usage\n\n```js\nplugins.crop(function success () {\n\n}, function fail () {\n\n}, '/path/to/image', options)\n```\n\nor, if you are running on an environment that supports Promises\n(Crosswalk, Android >= KitKat, iOS >= 8)\n\n```js\nplugins.crop.promise('/path/to/image', options)\n.then(function success (newPath) {\n\n})\n.catch(function fail (err) {\n\n})\n```\n\n## API\n\n * quality: Number\n\nThe resulting JPEG quality. default: 100\n\n## Ionic / Typescript Example Angular 2 Service\n\n<img src=\"screenshot-example.png\" width=\"250\" height=\"500\">\n\nThis is an example service that uses ionic-native's built in camera and the cordova-plugin-crop to created a cropped version of the image and return the file path. \n\n```js\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { Camera } from 'ionic-native';\n\ndeclare var plugins: any;\n\n@Injectable()\nexport class CameraService {\n\n  public options: any = {\n        allowEdit: true,\n        sourceType: Camera.PictureSourceType.SAVEDPHOTOALBUM,\n        mediaType: Camera.MediaType.ALLMEDIA,\n        destinationType: Camera.DestinationType.FILE_URI\n  }\n  \n  constructor(public platform: Platform) {}\n\n  // Return a promise to catch errors while loading image\n  getMedia(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // Get Image from ionic-native's built in camera plugin\n      Camera.getPicture(this.options).then((fileUri) => {\n        // Crop Image, on android this returns something like, '/storage/emulated/0/Android/...'\n        // Only giving an android example as ionic-native camera has built in cropping ability\n        if (this.platform.is('android') {\n          // Modify fileUri format, may not always be necessary\n          fileUri = 'file://' + fileUri;\n          const options = { quality: 100 };\n          /* Using cordova-plugin-crop starts here */\n          plugins.crop.promise(fileUri, options).then( (path) => {\n            // path looks like 'file:///storage/emulated/0/Android/data/com.foo.bar/cache/1477008080626-cropped.jpg?1477008106566'\n            console.log('Cropped Image Path!: ' + path);\n            // Do whatever you want with new path such as read in a file\n            // Here we resolve the path to finish, but normally you would now want to read in the file\n            resolve(path);\n          }).catch( (error) => {\n            reject(error);\n          });\n        }\n      }).catch((error) => {\n        reject(error);\n      }\n    });\n  }\n  \n}  \n```\n\n\n\n### Libraries used\n\n * iOS: [PEPhotoCropEditor](https://github.com/kishikawakatsumi/PEPhotoCropEditor)\n * Android: [android-crop](https://github.com/jdamcd/android-crop)\n\n## License\n\nMIT Â© [Jeduan Cornejo](https://github.com/jeduan)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jeduan/cordova-plugin-crop.git"
  },
  "version": "0.4.0"
}
