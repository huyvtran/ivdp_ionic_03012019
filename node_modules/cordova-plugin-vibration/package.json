{
  "_from": "cordova-plugin-vibration@3.1.0",
  "_id": "cordova-plugin-vibration@3.1.0",
  "_inBundle": false,
  "_integrity": "sha1-Y+V6HecuMYsJRO9yfXxO/xPKLJM=",
  "_location": "/cordova-plugin-vibration",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "cordova-plugin-vibration",
    "fetchSpec": "3.1.0",
    "name": "cordova-plugin-vibration",
    "raw": "cordova-plugin-vibration@3.1.0",
    "rawSpec": "3.1.0",
    "registry": true,
    "saveSpec": null,
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/cordova-plugin-vibration/-/cordova-plugin-vibration-3.1.0.tgz",
  "_shasum": "63e57a1de72e318b0944ef727d7c4eff13ca2c93",
  "_shrinkwrap": null,
  "_spec": "cordova-plugin-vibration@3.1.0",
  "_where": "/home/linkwok/ionicproject/intranetmobile-1.1.0",
  "author": {
    "name": "Apache Software Foundation"
  },
  "bugs": {
    "url": "https://issues.apache.org/jira/browse/CB"
  },
  "bundleDependencies": false,
  "cordova": {
    "id": "cordova-plugin-vibration",
    "platforms": [
      "android",
      "ios",
      "windows"
    ]
  },
  "dependencies": {},
  "deprecated": false,
  "description": "Cordova Vibration Plugin",
  "devDependencies": {
    "eslint": "^4.0.0",
    "eslint-config-semistandard": "^11.0.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-plugin-import": "^2.3.0",
    "eslint-plugin-node": "^5.0.0",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-standard": "^3.0.1"
  },
  "engines": {
    "cordovaDependencies": {
      "4.0.0": {
        "cordova": ">100"
      }
    }
  },
  "homepage": "https://github.com/apache/cordova-plugin-vibration#readme",
  "keywords": [
    "cordova",
    "cordova-android",
    "cordova-ios",
    "cordova-windows",
    "ecosystem:cordova",
    "vibration"
  ],
  "license": "Apache-2.0",
  "name": "cordova-plugin-vibration",
  "optionalDependencies": {},
  "readme": "---\ntitle: Vibration\ndescription: Vibrate the device.\n---\n<!--\n# license: Licensed to the Apache Software Foundation (ASF) under one\n#         or more contributor license agreements.  See the NOTICE file\n#         distributed with this work for additional information\n#         regarding copyright ownership.  The ASF licenses this file\n#         to you under the Apache License, Version 2.0 (the\n#         \"License\"); you may not use this file except in compliance\n#         with the License.  You may obtain a copy of the License at\n#\n#           http://www.apache.org/licenses/LICENSE-2.0\n#\n#         Unless required by applicable law or agreed to in writing,\n#         software distributed under the License is distributed on an\n#         \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#         KIND, either express or implied.  See the License for the\n#         specific language governing permissions and limitations\n#         under the License.\n-->\n\n|AppVeyor|Travis CI|\n|:-:|:-:|\n|[![Build status](https://ci.appveyor.com/api/projects/status/github/apache/cordova-plugin-vibration?branch=master)](https://ci.appveyor.com/project/ApacheSoftwareFoundation/cordova-plugin-vibration)|[![Build Status](https://travis-ci.org/apache/cordova-plugin-vibration.svg?branch=master)](https://travis-ci.org/apache/cordova-plugin-vibration)|\n\n# cordova-plugin-vibration\n\nThis plugin aligns with the W3C vibration specification http://www.w3.org/TR/vibration/\n\nThis plugin provides a way to vibrate the device.\n\nThis plugin defines global objects including `navigator.vibrate`.\n\nAlthough in the global scope, they are not available until after the `deviceready` event.\n\n    document.addEventListener(\"deviceready\", onDeviceReady, false);\n    function onDeviceReady() {\n        console.log(navigator.vibrate);\n    }\n\n:warning: Report issues on the [Apache Cordova issue tracker](https://issues.apache.org/jira/issues/?jql=project%20%3D%20CB%20AND%20status%20in%20%28Open%2C%20%22In%20Progress%22%2C%20Reopened%29%20AND%20resolution%20%3D%20Unresolved%20AND%20component%20%3D%20%22Plugin%20Vibration%22%20ORDER%20BY%20priority%20DESC%2C%20summary%20ASC%2C%20updatedDate%20DESC)\n\n\n## Installation\n\n    cordova plugin add cordova-plugin-vibration\n\n## Supported Platforms\n\nnavigator.vibrate\n\n- Android\n- iOS\n- Windows\n\n\nThe Android webview (API level 19 and up) supports the [W3C Vibration API](https://www.w3.org/TR/vibration/) natively and therefore, the Android specific implementation of this plugin has been dropped.\n\n## vibrate\n\nThis function has three different functionalities based on parameters passed to it.\n\n### Standard vibrate\n\nVibrates the device for a given amount of time.\n\n    navigator.vibrate(time)\n\nor\n\n    navigator.vibrate([time])\n\n\n-__time__: Milliseconds to vibrate the device. _(Number)_\n\n#### Example\n\n    // Vibrate for 3 seconds\n    navigator.vibrate(3000);\n\n    // Vibrate for 3 seconds\n    navigator.vibrate([3000]);\n\n### Android Quirks\n\nCalls to `navigator.vibrate` will immediately return `false` if user hasn't tapped on the frame or any embedded frame yet. Please checkout https://issues.apache.org/jira/browse/CB-14022 for more information.\n\n\n#### iOS Quirks\n\n- __time__: Ignores the specified time and vibrates for a pre-set amount of time.\n\n    navigator.vibrate(3000); // 3000 is ignored\n\n#### Windows Quirks\n\n- __time__: Max time is 5000ms (5s) and min time is 1ms\n\n    navigator.vibrate(8000); // will be truncated to 5000\n\n### Vibrate with a pattern (Android and Windows only)\nVibrates the device with a given pattern\n\n    navigator.vibrate(pattern);\n\n- __pattern__: Sequence of durations (in milliseconds) for which to turn on or off the vibrator. _(Array of Numbers)_\n\n#### Example\n\n    // Vibrate for 1 second\n    // Wait for 1 second\n    // Vibrate for 3 seconds\n    // Wait for 1 second\n    // Vibrate for 5 seconds\n    navigator.vibrate([1000, 1000, 3000, 1000, 5000]);\n\n\n### Cancel vibration (not supported in iOS)\n\nImmediately cancels any currently running vibration.\n\n    navigator.vibrate(0)\n\nor\n\n    navigator.vibrate([])\n\nor\n\n    navigator.vibrate([0])\n\nPassing in a parameter of 0, an empty array, or an array with one element of value 0 will cancel any vibrations.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apache/cordova-plugin-vibration.git"
  },
  "scripts": {
    "eslint": "eslint www && eslint src && eslint tests",
    "test": "npm run eslint"
  },
  "types": "./types/index.d.ts",
  "version": "3.1.0"
}
